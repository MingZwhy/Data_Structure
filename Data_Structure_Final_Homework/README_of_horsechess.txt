1、马踏棋盘问题：给定ROW x COL大小的棋盘（一般为正方形）
再给定一个出发点(如0,0),棋子只能像象棋中的马一样走日，目标是
求出可以遍历棋盘上每一个点的走法。

2、程序采用栈+DFS的解法，同时因为当棋盘有一定大小时，可能
的解法是求不完的，所以我们希望在有限的时间内尽可能地求出更多
的解法，因此采取了一定优化——尽可能选择可能选点少的分支，因为
分支的选点越少，则比值   成功路径 / 所有可能路径 越大，更细节的
原理可以参考CSDN上的博客。

3、运行说明：运行程序时会提示输入出发点的横坐标和纵坐标
希望得到的结果数以及是否希望打印每一种结果，注意如果您选择
打印出每一种结果，程序将在打印上耗费时间（打印花费的时间远
远大于实际计算的时间）
如果选择不打印，则程序会显示计算出您希望的结果数耗费的时间。

4、默认的棋盘大小是8x8，如果您希望改变棋盘的大小，可以自行
修改代码第4,5行的 const int ROW = 8 和 const int COL = 8，
只要修改宏就可以运行了。